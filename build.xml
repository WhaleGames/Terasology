<?xml version="1.0" encoding="UTF-8"?>
<project name="terasology" default="all">
    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>

    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
    </patternset>

    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>

    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
        <include name="**/?*.glsl"/>
        <include name="**/?*.png"/>
        <include name="**/?*.ogg"/>
        <include name="**/?*.fnt"/>
        <include name="**/?*.groovy"/>
    </patternset>

    <path id="library.libs.classpath">
        <fileset dir="${basedir}/libs">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <!-- GROOVY! -->
    <target name="register.custom.compilers">
        <property name="grooovyc.task.sdk" value="library.libs.classpath"/>
        <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="${grooovyc.task.sdk}"/>
    </target>

    <dirname property="module.terasology.basedir" file="${ant.file}"/>

    <property name="compiler.args.terasology" value="${compiler.args}"/>

    <property name="terasology.output.dir" value="out/production/terasology"/>
    <property name="terasology.testoutput.dir" value="out/test/terasology"/>

    <path id="terasology.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="terasology.module.production.classpath">
        <path refid="library.libs.classpath"/>
    </path>

    <path id="terasology.runtime.production.module.classpath">
        <pathelement location="${terasology.output.dir}"/>
        <path refid="library.libs.classpath"/>
    </path>

    <path id="terasology.module.classpath">
        <pathelement location="${terasology.output.dir}"/>
        <path refid="library.libs.classpath"/>
    </path>

    <path id="terasology.runtime.module.classpath">
        <pathelement location="${terasology.testoutput.dir}"/>
        <pathelement location="${terasology.output.dir}"/>
        <path refid="library.libs.classpath"/>
    </path>


    <patternset id="excluded.from.module.terasology">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.terasology">
        <patternset refid="excluded.from.module.terasology"/>
    </patternset>

    <path id="terasology.module.sourcepath">
        <dirset dir="${module.terasology.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <target name="compile.module.terasology"
            depends="compile.module.terasology.production,compile.module.terasology.tests"
            description="Compile module Terasology"/>

    <target name="compile.module.terasology.production" depends="register.custom.compilers"
            description="Compile module Terasology; production classes">
        <mkdir dir="${terasology.output.dir}"/>
        <groovyc destdir="${terasology.output.dir}" fork="yes">
            <src refid="terasology.module.sourcepath"/>
            <classpath refid="terasology.module.production.classpath"/>
            <patternset refid="excluded.from.compilation.terasology"/>
            <javac debug="${compiler.debug}">
                <compilerarg line="${compiler.args.terasology}"/>
            </javac>
        </groovyc>

        <copy todir="${terasology.output.dir}">
            <fileset dir="${module.terasology.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.terasology.tests" depends="compile.module.terasology.production"
            description="compile module terasology; test classes" unless="skip.tests"/>

    <target name="clean.module.terasology" description="cleanup module">
        <delete dir="${terasology.output.dir}"/>
        <delete dir="${terasology.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.terasology, clean.artifact.terasology" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.terasology" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.terasology:zip" value="${basedir}/out/artifacts/dist"/>
        <property name="artifact.output.terasology" value="${basedir}/out/artifacts/terasology"/>
        <property name="artifact.output.terasology:jar" value="${basedir}/out/artifacts/terasology_jar"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.terasology.jar" value="${artifacts.temp.dir}/terasology.jar"/>
    </target>

    <target name="clean.artifact.terasology" depends="init.artifacts" description="clean terasology artifact output">
        <delete dir="${artifact.output.terasology}"/>
    </target>

    <target name="artifact.terasology" depends="init.artifacts, artifact.terasology:jar"
            description="Build &apos;terasology&apos; artifact">
        <mkdir dir="${artifact.output.terasology}"/>
        <copy todir="${artifact.output.terasology}">
            <fileset dir="${artifact.temp.output.terasology:jar}"/>
        </copy>
        <copy file="${basedir}/README.markdown" tofile="${artifact.output.terasology}/README.markdown"/>
        <copy file="${basedir}/OpenAL32.dll" tofile="${artifact.output.terasology}/OpenAL32.dll"/>
        <copy file="${basedir}/OpenAL64.dll" tofile="${artifact.output.terasology}/OpenAL64.dll"/>
        <copy file="${basedir}/scripts/run_linux.sh" tofile="${artifact.output.terasology}/run_linux.sh"/>
        <copy file="${basedir}/scripts/run_macosx.command" tofile="${artifact.output.terasology}/run_macosx.command"/>
        <copy file="${basedir}/scripts/Launcher.exe" tofile="${artifact.output.terasology}/Terasology.exe"/>
        <mkdir dir="${artifact.output.terasology}/natives"/>
        <copy todir="${artifact.output.terasology}/natives">
            <fileset dir="${basedir}/natives"/>
        </copy>
        <mkdir dir="${artifact.output.terasology}/groovy"/>
        <copy todir="${artifact.output.terasology}/groovy">
            <fileset dir="${basedir}/groovy"/>
        </copy>
        <mkdir dir="${artifact.output.terasology}/blocks"/>
        <copy todir="${artifact.output.terasology}/blocks">
            <fileset dir="${basedir}/blocks"/>
        </copy>
    </target>

    <target name="artifact.terasology:zip" depends="artifact.terasology" description="None">
        <mkdir dir="${artifact.output.terasology:zip}"/>
        <zip basedir="${artifact.output.terasology}" destfile="${artifact.output.terasology:zip}/Terasology.zip"/>
    </target>

    <target name="artifact.terasology:jar" depends="init.artifacts, compile.module.terasology"
            description="Build &apos;terasology:jar&apos; artifact">
        <property name="artifact.temp.output.terasology:jar" value="${artifacts.temp.dir}/terasology_jar"/>
        <mkdir dir="${artifact.temp.output.terasology:jar}"/>
        <jar destfile="${temp.jar.path.terasology.jar}" duplicate="add" manifest="${basedir}/src/META-INF/MANIFEST.MF"
             filesetmanifest="skip">
            <zipfileset dir="${terasology.output.dir}"/>
            <zipfileset src="${basedir}/libs/annotations.jar"/>
            <zipfileset src="${basedir}/libs/AppleJavaExtensions.jar"/>
            <zipfileset src="${basedir}/libs/jogg-0.0.7.jar"/>
            <zipfileset src="${basedir}/libs/jorbis-0.0.15.jar"/>
            <zipfileset src="${basedir}/libs/jinput.jar"/>
            <zipfileset src="${basedir}/libs/lwjgl.jar"/>
            <zipfileset src="${basedir}/libs/lwjgl_util.jar"/>
            <zipfileset src="${basedir}/libs/lzma.jar"/>
            <zipfileset src="${basedir}/libs/slick.jar"/>
            <zipfileset src="${basedir}/libs/slick-util.jar"/>
            <zipfileset src="${basedir}/libs/trove-3.0.0.jar"/>
            <zipfileset src="${basedir}/libs/groovy-all-1.8.2.jar"/>
            <zipfileset src="${basedir}/libs/jdom.jar"/>
            <zipfileset src="${basedir}/libs/vecmath.jar"/>
            <zipfileset src="${basedir}/libs/jbullet.jar"/>
        </jar>
        <copy file="${temp.jar.path.terasology.jar}" tofile="${artifact.temp.output.terasology:jar}/Terasology.jar"/>
    </target>

    <target name="build.all.artifacts" depends="artifact.terasology, artifact.terasology:jar, artifact.terasology:zip"
            description="Build all artifacts">
        <mkdir dir="${artifact.output.terasology:jar}"/>
        <copy todir="${artifact.output.terasology:jar}">
            <fileset dir="${artifact.temp.output.terasology:jar}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>